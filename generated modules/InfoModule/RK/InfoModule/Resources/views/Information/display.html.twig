{# purpose of this template: informations display view #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : (routeArea == 'admin' ? 'adminBase' : 'base') %}
{% extends 'RKInfoModule::' ~ baseTemplate ~ '.html.twig' %}
{% block pageTitle %}{{ information.getTitleFromDisplayPattern()|default(__('Information')) }}{% endblock %}
{% block title %}
    {% set templateTitle = information.getTitleFromDisplayPattern()|default(__('Information')) %}
    {{ templateTitle|notifyFilters('rkinfomodule.filter_hooks.informations.filter') }}
    {% set itemActions = knp_menu_get('RKInfoModule:ItemActionsMenu:menu', [], { entity: information, area: routeArea, context: 'display' }) %}
    <div class="dropdown">
        <a id="itemActions{{ information.id }}DropDownToggle" role="button" data-toggle="dropdown" data-target="#" href="javascript:void(0);" class="hidden dropdown-toggle"><i class="fa fa-tasks"></i> {{ __('Actions') }} <span class="caret"></span></a>
        {{ knp_menu_render(itemActions, { template: 'ZikulaMenuModule:Override:actions.html.twig' }) }}
    </div>
{% endblock %}
{% block admin_page_icon 'eye' %}
{% block content %}
    {% set isQuickView = app.request.query.getBoolean('raw', false) %}
    <div class="rkinfomodule-information rkinfomodule-display">


    <dl>
        {% if information.title is not empty %}
            <dt>{{ __('Title') }}</dt>
            <dd>{{ information.title }}</dd>
        {% endif %}
        {% if information.theDescription is not empty %}
            <dt>{{ __('The description') }}</dt>
            <dd>{{ information.theDescription|safeHtml }}</dd>
        {% endif %}
        
    </dl>
    {{ include('@RKInfoModule/Helper/includeStandardFieldsDisplay.html.twig', { obj: information }) }}

    {% if not isQuickView %}
        {# include display hooks #}
        {{ block('display_hooks') }}
    {% endif %}
</div>
{% endblock %}
{% block display_hooks %}
    {% set hooks = notifyDisplayHooks(eventName='rkinfomodule.ui_hooks.informations.display_view', id=information.id, urlObject=currentUrlObject) %}
    {% for providerArea, hook in hooks if providerArea != 'provider.scribite.ui_hooks.editor' %}
        {{ hook }}
    {% endfor %}
{% endblock %}
